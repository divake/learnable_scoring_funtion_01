# CIFAR-10 specific configuration
inherit: base_config.yaml

# Device configuration
device: 1  # Use first GPU (cuda:0)

# Caching configuration
cache:
  enabled: true
  dir: cache  # Will be created under base_dir
  compression: false  # Whether to use compression for cached files

dataset:
  name: cifar10
  num_classes: 10
  input_size: [32, 32]
  mean: [0.4914, 0.4822, 0.4465]
  std: [0.2023, 0.1994, 0.2010]

model:
  architecture: resnet18
  pretrained_path: models/resnet18_cifar10_best.pth 

# Paths
plot_dir: plots/cifar10
log_dir: logs/cifar10

# Training parameters
num_epochs: 30
batch_size: 128
learning_rate: 0.001
target_coverage: 0.9

# Training configuration
training:
  grad_clip:
    enabled: true
    max_norm: 0.5
  loss_weights:
    coverage: 2.0  # Increased from 1.0 to prioritize coverage
    size: 1.0      # lambda2
    margin: 0.2    # margin loss weight

# Optimizer configuration
optimizer:
  name: 'AdamW'
  params:
    lr: 0.001
    weight_decay: 0.01
  scheduler:
    name: 'OneCycleLR'
    params:
      max_lr: 0.001
      pct_start: 0.2
      div_factor: 20
      final_div_factor: 100
      anneal_strategy: 'cos'

# Model architecture
scoring_function:
  hidden_dims: [64, 32]
  dropout: 0.2
  l2_lambda: 0.1
  activation:
    name: 'LeakyReLU'
    params:
      negative_slope: 0.1
  final_activation:
    name: 'Softplus'
    params:
      beta: 10  # Increased back to 10 for sharper separation

# Training constraints
tau:
  min: 0.1
  max: 0.9
  window_size: 5  # Increased from 0 for more stable tau
  smoothing_weights:
    start: 1.5
    end: 1.0

# Set size constraints
set_size:
  target: 1
  max: 3.0
  margin: 2

# Training dynamics
training_dynamics:
  stability_factor: 0.05  # Stability regularization strength
  separation_factor: 0.5  # Separation loss weight
  perturbation_noise: 0.01  # Noise level for stability checks
  permutation_augmentation_prob: 0.5  # Probability of applying permutation during training
  coverage_tolerance: 0.02  # Tolerance for coverage checks (Â±2%)
  coverage_closeness_threshold: 0.01  # When coverage is "close enough"
  coverage_deficit_threshold: 0.02  # When to boost coverage loss
  size_penalty_boost: 1.5  # Boost factor for size penalty when coverage is good
  coverage_boost: 2.0  # Boost factor for coverage loss when below target
  xavier_init_gain: 0.5  # Gain for Xavier initialization
  num_workers: 2  # DataLoader workers for cached data
  ece_test_points: 10  # Number of points for ECE calculation